{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
     Only "getter" methods (method names starting with "get", "has", or "is")
     and a few common methods such as "id" and "label" are available. Calling
     other methods (such as node.delete) will result in an exception.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}

{% set classes = ['vf-card--academy']|merge(['card','card--inline','w-100']) %}

<article {{ attributes.addClass(classes) }}>
  <div class="card-col position-relative card-image--inline">
    {{ addAttributes(content.field_vactory_media, {'class': ['vf-card__image']}) }}
  </div>
  <span class='badge-primary badge-top'>{{ 'Drur√©e'|t }} {{ content.field_academy_duree.0['#context']['value'] }}</span>
  <div class="card-col position-relative card-body--inline">
    <div class="card-body">
      {{ contextual_links }}
      {{ title_prefix }}
      <h4 {{ title_attributes }} class="card-title">
        <a href="{{ url }}" rel="bookmark" class="link font-semibold text-uppercase font-20">{{ label }}</a>
      </h4>
      {{ title_suffix }}

      {#<h6 class="card-subtitle">
        <span class="badge badge-primary">{{ content.field_vactory_theme.0['#plain_text'] }}</span>
          {{ content.field_vactory_date.0['#text']|date('d/m/Y') }}
      </h6>#}
      <p>{{ instructor.first_name|capitalize }} {{ instructor.last_name|capitalize }}</p>
      <div class="star-rating mb-2">
        {% set rating = content.rate_vote_widget["#results"].fivestar.vote_average %}
        {% for i in 0..4 %}
          {% if rating >=1 %}
            <span class="favorite-star checked-full"></span>
          {% elseif rating <1  and rating >0 %}  
            <span class="favorite-star checked-half"></span>
          {% else %}
            <span class="favorite-star"></span>
          {% endif %}
          {% set rating = rating - 1 %}
        {% endfor %}
        {% if content.rate_vote_widget["#results"].fivestar.vote_count is not null %}
          <span class='ml-2'>{{ content.rate_vote_widget["#results"].fivestar.vote_average }} ({{ content.rate_vote_widget["#results"].fivestar.vote_count }} {{ 'Notes'|t }})</span>
        {% endif %}
      </div>

      {% if is_anonymous %}
        <div class="flag flag-favorite-academy js-flag-favorite-academy-2 action-flag">
          <a href="{{ url('user.login') }} {{- redirect_params }}" class="favorite-course prefix-icon-heart"></a>
        </div>
      {% else %}
        {{ content.flag_favorite_academy }}
      {% endif %}

      {{ noWrapper(hideLabel(content.field_vactory_excerpt)) }}

      <div class="card-read-more">
        <a href="{{ url }}" class="btn btn-primary">{{ 'Read more'|t }}</a>
      </div>
    </div>
  </div>
</article>
